// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tiny.Infrastructure;

#nullable disable

namespace Tiny.Infrastructure.Migrations.AppDbMigrations
{
    [DbContext(typeof(TinyDbContext))]
    [Migration("20230404071443_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("EntityFrameworkHiLoSequence")
                .IncrementsBy(10);

            modelBuilder.Entity("Tiny.Domain.AggregateModels.GLAccountAggregate.AccountingType", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Value");

                    b.ToTable("AccountingType", "dbo");

                    b.HasData(
                        new
                        {
                            Value = 1,
                            Name = "Asset"
                        },
                        new
                        {
                            Value = 3,
                            Name = "Equity"
                        },
                        new
                        {
                            Value = 5,
                            Name = "Expense"
                        },
                        new
                        {
                            Value = 2,
                            Name = "Liability"
                        },
                        new
                        {
                            Value = 4,
                            Name = "Revenue"
                        });
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.GLAccountAggregate.GLAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<long>("Id"), "EntityFrameworkHiLoSequence");

                    b.Property<int>("AccountingTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 6)
                        .HasColumnType("decimal(19,6)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PostableId")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountingTypeId");

                    b.HasIndex("PostableId");

                    b.HasIndex("TenantId", "Code", "Name")
                        .IsUnique();

                    b.ToTable("GLAccount", "dbo");
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.GLAccountAggregate.Postable", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Value");

                    b.ToTable("Postable", "dbo");

                    b.HasData(
                        new
                        {
                            Value = 2,
                            Name = "No"
                        },
                        new
                        {
                            Value = 1,
                            Name = "Yes"
                        });
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.JournalEntryAggregate.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<long>("Id"), "EntityFrameworkHiLoSequence");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique();

                    b.ToTable("Department", "dbo");
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.JournalEntryAggregate.JournalEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<long>("Id"), "EntityFrameworkHiLoSequence");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("");

                    b.Property<int>("JournalEntryStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JournalEntryStatusId");

                    b.ToTable("JournalEntry", "dbo");
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.JournalEntryAggregate.JournalEntryLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("CreditAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 6)
                        .HasColumnType("decimal(19,6)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("DebitAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 6)
                        .HasColumnType("decimal(19,6)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("");

                    b.Property<long>("GLAccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("JournalEntryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GLAccountId");

                    b.HasIndex("JournalEntryId");

                    b.ToTable("JournalEntryLine", "dbo");
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.JournalEntryAggregate.JournalEntryStatus", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Value");

                    b.ToTable("JournalEntryStatus", "dbo");

                    b.HasData(
                        new
                        {
                            Value = 3,
                            Name = "반려"
                        },
                        new
                        {
                            Value = 2,
                            Name = "승인"
                        },
                        new
                        {
                            Value = 1,
                            Name = "신청"
                        });
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.JournalEntryAggregate.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<long>("Id"), "EntityFrameworkHiLoSequence");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique();

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.GLAccountAggregate.GLAccount", b =>
                {
                    b.HasOne("Tiny.Domain.AggregateModels.GLAccountAggregate.AccountingType", "AccountingType")
                        .WithMany()
                        .HasForeignKey("AccountingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiny.Domain.AggregateModels.GLAccountAggregate.Postable", "Postable")
                        .WithMany()
                        .HasForeignKey("PostableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountingType");

                    b.Navigation("Postable");
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.JournalEntryAggregate.JournalEntry", b =>
                {
                    b.HasOne("Tiny.Domain.AggregateModels.JournalEntryAggregate.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiny.Domain.AggregateModels.JournalEntryAggregate.JournalEntryStatus", "Status")
                        .WithMany()
                        .HasForeignKey("JournalEntryStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.JournalEntryAggregate.JournalEntryLine", b =>
                {
                    b.HasOne("Tiny.Domain.AggregateModels.GLAccountAggregate.GLAccount", "GLAccount")
                        .WithMany()
                        .HasForeignKey("GLAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiny.Domain.AggregateModels.JournalEntryAggregate.JournalEntry", null)
                        .WithMany("Lines")
                        .HasForeignKey("JournalEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GLAccount");
                });

            modelBuilder.Entity("Tiny.Domain.AggregateModels.JournalEntryAggregate.JournalEntry", b =>
                {
                    b.Navigation("Lines");
                });
#pragma warning restore 612, 618
        }
    }
}
